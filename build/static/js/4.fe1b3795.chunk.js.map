{"version":3,"sources":["pages/checkout.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["React","memo","connect","store","cart","app","props","newSum","useState","customer_id","customer_idFun","address","addressFun","phone","phoneFun","i","length","curSum","price","amount","SumCounter","totalSum","delivery","eur","toFixed","delStyle","formHandler","e","target","name","value","className","method","action","encType","type","id","placeholder","onChange","required","min","style","display","JSON","stringify","readOnly","onClick","localStorage","setItem","_slicedToArray","arr","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/4.fe1b3795.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nfunction CheckoutPage(props) {\n\n    let [customer_id, customer_idFun] = useState('');\n    let [address, addressFun] = useState('');\n    let [phone, phoneFun] = useState('');\n\n    const {\n        cart,\n    } = props\n\n    let newSum;\n\n    function SumCounter() {\n        newSum = 0;\n        for (let i = 0; i < cart.length; i++) {\n            let curSum = cart[i].price * cart[i].amount;\n            newSum = newSum + curSum;\n        };\n    };\n\n    SumCounter();\n\n    let totalSum = newSum < 189 && cart.length ? newSum + 10 : newSum;\n    let delivery = totalSum < 200 && cart.length ? \"$10\" : \"Free!\";\n    let eur = totalSum !== 0 ? (totalSum * 1.0842).toFixed(1) : 0;\n    let delStyle = cart.length ? \"\" : \"none\";\n\n\n    function serverOrderEngine() {\n        if (customer_id !== '' && address !== '' && phone !== '') {\n            localStorage.setItem(`cartInfo`, JSON.stringify([]));\n        }\n\n    }\n\n    function formHandler(e) {\n        switch (e.target.name) {\n            case \"customer_id\":\n                customer_idFun(e.target.value);\n                break\n            case \"address\":\n                addressFun(e.target.value);\n                break\n            case \"phone\":\n                phoneFun(e.target.value);\n                break\n            default:\n        }\n    }\n\n    return (\n        <div className=\"cart-table-area section-padding-100\">\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-lg-8\">\n                        <div className=\"checkout_details_area mt-50 clearfix\">\n\n                            <div className=\"cart-title\">\n                                <h2>CHECKOUT</h2>\n                            </div>\n\n                            <form method=\"post\" action=\"http://a0438483.xsph.ru/?cart\" encType=\"multipart/form-data\">\n                                <div className=\"row\">\n\n                                    <div className=\"col-md-6 mb-3\">\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            id=\"first_name\"\n                                            name=\"customer_id\"\n                                            value={customer_id}\n                                            placeholder=\"NAME\"\n                                            onChange={(e) => formHandler(e)}\n                                            required\n                                        />\n                                    </div>\n\n                                    <div className=\"col-12 mb-3\">\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control mb-3\"\n                                            id=\"street_address\"\n                                            name=\"address\"\n                                            onChange={(e) => formHandler(e)}\n                                            placeholder=\"ADDRESS\"\n                                            value={address}\n                                            required\n                                        />\n                                    </div>\n\n                                    <div className=\"col-md-6 mb-3\">\n                                        <input\n                                            type=\"text\"\n                                            className=\"form-control\"\n                                            id=\"phone_number\"\n                                            name=\"phone\"\n                                            onChange={(e) => formHandler(e)}\n                                            min=\"0\"\n                                            placeholder=\"PHONE\"\n                                            value={phone}\n                                            required\n                                        />\n                                    </div>\n\n                                    <div\n                                        style={{ display: \"none\" }}\n                                    >\n                                        <input\n                                            type=\"text\"\n                                            name=\"cart\"\n                                            value={JSON.stringify(cart)}\n                                            readOnly={true}\n                                        />\n                                    </div>\n\n                                </div>\n\n                                <div className=\"cart-btn mt-100\">\n                                    <input\n                                        type=\"submit\"\n                                        name=\"send\"\n                                        value=\"PAY FOR THE ORDER\"\n                                        onClick={serverOrderEngine}\n                                        className=\"btn amado-btn w-100\"\n                                    />\n                                </div>\n\n                            </form>\n                        </div>\n                    </div>\n\n                    <div className=\"col-12 col-lg-4\">\n                        <div className=\"cart-summary\">\n                            <h5>Total sum</h5>\n                            <ul className=\"summary-table\">\n                                <li style={{ display: `${delStyle}` }}><span>delivery:</span> <span>{delivery}</span></li>\n                                <li><span>total:</span> <span>${totalSum} / â‚¬{eur}</span></li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nconst mapStateToProps = (store) => {\n    return {\n        cart: store.app.cart,\n    };\n};\n\nexport default React.memo(connect(mapStateToProps)(CheckoutPage));","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}