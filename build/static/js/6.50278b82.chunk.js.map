{"version":3,"sources":["components/cart/cart_product.jsx","pages/cart.jsx"],"names":["React","memo","props","image","title","price","quantity","id","key","cart","catalog","onChange","CartQuantity","e","operator","currentTarget","getAttribute","ident","map","item","amount","i","length","className","to","URL","src","alt","onClick","style","marginRight","aria-hidden","type","value","userSelect","readOnly","connect","store","app","data","catalogLoading","isLoading","fuckingCrutch","dispatch","updateCart","array","engineLoaderMazaFucker","actions","updateFuckingCrutch","bool","newSum","SumCounter","curSum","totalSum","delivery","eur","toFixed","delStyle","splice","localStorage","setItem","JSON","stringify","display"],"mappings":"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","file":"static/js/6.50278b82.chunk.js","sourcesContent":["import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport * as URL from '../../router/url';\nimport { Link } from 'react-router-dom';\n\nCartProduct.propTypes = {\n    cart: PropTypes.array,\n    catalog: PropTypes.array,\n    onChange: PropTypes.func,\n};\n\nfunction CartProduct(props) {\n\n    const {\n        cart,\n        catalog,\n        onChange,\n    } = props;\n\n    let image;\n    let title;\n    let price;\n    let quantity; // кол-во товара в корзине (default=1)\n    let id;\n    let key;\n\n    function CartQuantity(e) { // передаём в родителя значение кликнутого элемента\n        const operator = e.currentTarget.getAttribute(\"operator\");\n        const ident = e.currentTarget.getAttribute(\"ident\");\n        onChange(operator, ident);\n    }\n\n    return cart.map((item) => { // генерим товары на основании количества записей в store-cart\n\n        quantity = item.amount;\n\n        for (let i = 0; i < catalog.length; i++) {\n            if (catalog[i][0] === item.item) {\n                image = catalog[i][2];\n                title = catalog[i][1];\n                price = catalog[i][3];\n                id = catalog[i][0];\n                key = catalog[i][0];\n            };\n        };\n\n        return (\n            <tr key={key}>\n                <td className=\"cart_product_img\">\n                    <Link to={`${URL.PRODUCT}/${id}`}>\n                        <img src={`http://a0438483.xsph.ru/img/${image}`} alt=\"Product\" />\n                    </Link>\n                </td>\n\n                <td className=\"cart_product_desc\">\n                    <h5>{title}</h5>\n                </td>\n\n                <td className=\"price\">\n                    <span>${price}</span>\n                </td>\n\n                <td className=\"qty\">\n                    <div className=\"qty-btn d-flex\">\n\n\n                        <div className=\"quantity\">\n\n                            {/* кнопка минуса */}\n                            <span className=\"qty-minus\"\n                                onClick={CartQuantity}\n                                operator=\"minus\"\n                                ident={id}\n                                    style={{marginRight: \"10px\"}}>\n                                <i\n                                    className=\"fa fa-minus\"\n                                    aria-hidden=\"true\"\n                                    \n                                >\n                                </i>\n                            </span>\n\n                            {/* индикатор количества товаров */}\n                            <input\n                                type=\"number\"\n                                className=\"qty-text\"\n                                value={quantity}\n                                style={{ userSelect: \"none\" }}\n                                readOnly={true}\n                            />\n\n\n                            {/* кнопка плюса */}\n                            <span\n                                className=\"qty-plus\"\n                                onClick={CartQuantity}\n                                operator=\"plus\"\n                                ident={id}>\n                                <i\n                                    className=\"fa fa-plus\"\n                                    aria-hidden=\"true\"\n                                >\n                                </i>\n                            </span>\n\n                        </div>\n                    </div>\n                </td>\n            </tr>\n        )\n    });\n};\n\nexport default React.memo(CartProduct); // этим пользуется компонент src/pages/cart.jsx","import React from 'react';\nimport CartProduct from '../components/cart/cart_product';\nimport {\n    updateCart,\n    updateFuckingCrutch,\n    engineLoaderMazaFucker,\n} from '../store/action_creatores';\nimport { connect } from 'react-redux';\nimport Spinner from \"../components/spinner\";\nimport * as PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport * as URL from '../router/url';\n\nCartPage.propTypes = {\n    cart: PropTypes.array,\n    catalog: PropTypes.array,\n    catalogLoading: PropTypes.bool,\n    engineLoaderMazaFucker: PropTypes.func,\n    fuckingCrutch: PropTypes.bool,\n    updateCart: PropTypes.func,\n    updateFuckingCrutch: PropTypes.func,\n};\n\nfunction CartPage(props) {\n\n    const {\n        cart,\n        catalog,\n        catalogLoading,\n        engineLoaderMazaFucker,\n        fuckingCrutch,\n        updateCart,\n        updateFuckingCrutch,\n    } = props;\n\n    if (fuckingCrutch) { // по-хорошему можно было бы запускать итерируемый рендер для одного товара, но сервер редиска и такого нам не позволяет\n        engineLoaderMazaFucker(\"catalog\"); // я уже объяснял, на кой хер эти танцы с тамбуринами, на странице src/pages/home,\n        updateFuckingCrutch(false); // так что не вижу смысла повторяться. И вообще, я устал и хочу нормального секса с живой женщиной, а не этого вот.\n    };\n\n    if (catalogLoading) {\n        return (<Spinner />);\n    };\n\n    let newSum;\n    function SumCounter() {\n        newSum = 0;\n        for (let i = 0; i < cart.length; i++) {\n            let curSum = cart[i].price * cart[i].amount;\n            newSum = newSum + curSum;\n        };\n    };\n    SumCounter();\n\n    let totalSum = newSum < 189 && cart.length ? newSum + 10 : newSum;\n    let delivery = totalSum < 200 && cart.length ? \"$10\" : \"Free!\";\n    let eur = totalSum !==0 ? (totalSum * 1.0842).toFixed(1) : 0;\n    let delStyle = cart.length ? \"\" : \"none\";\n\n    const handlerCartQuantity = (operator, ident) => { // раньше это была не константа, а функция (some sort eggs)\n\n        if (operator === \"plus\") { // увеличиваем количество товара\n            for (let i = 0; i < cart.length; i++) {\n                if (cart[i].item === ident) {\n                        cart[i].amount++;\n                        updateCart(cart);\n                };\n            };\n        } else { // уменьшаем количество товара\n            for (let i = 0; i < cart.length; i++) {\n                if (cart[i].item === ident) {\n                    if (cart[i].amount > 1) {\n                        cart[i].amount--;\n                        updateCart(cart);\n                    } else {\n                        cart.splice(i, 1);\n                        updateCart(cart);\n                    };\n                };\n            };\n        };\n        localStorage.setItem(`cartInfo`, JSON.stringify(cart)); // обновляем локалсторож\n        SumCounter();\n    };\n\n    return (\n        <div className=\"cart-table-area section-padding-100\">\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n\n                    <div className=\"col-12 col-lg-8\">\n                        <div className=\"cart-title mt-50\">\n                            <h2>Your order:</h2>\n                        </div>\n                        <div className=\"cart-table clearfix\">\n                            <table className=\"table table-responsive\">\n                                <thead>\n                                    <tr>\n                                        <th></th>\n                                        <th>Name</th>\n                                        <th>Price</th>\n                                        <th>Quantity</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n\n                                    <CartProduct\n                                        cart={cart}\n                                        catalog={catalog}\n                                        onChange={handlerCartQuantity} />\n\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n\n                    {/* выводим стоимость всех товаров */}\n                    <div className=\"col-12 col-lg-4\">\n                        <div className=\"cart-summary\">\n                            <h5>Cart total</h5>\n                            <ul className=\"summary-table\">\n                                <li style={{display: `${delStyle}`}}><span>delivery:</span> <span>{delivery}</span></li>\n                                <li><span>all:</span> <span>${totalSum} / €{eur}</span></li>\n                            </ul>\n                            <div className=\"cart-btn mt-100\">\n                                <Link to={URL.CHECKOUT} className=\"btn amado-btn w-100\">CHECKOUT</Link>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (store) => {\n    return {\n        cart: store.app.cart,\n        catalog: store.app.catalog.data,\n        catalogLoading: store.app.isLoading.catalog || false,\n        fuckingCrutch: store.app.fuckingCrutch,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        updateCart: (array) => dispatch(updateCart(array)),\n        engineLoaderMazaFucker: (actions) => dispatch(engineLoaderMazaFucker(actions)),\n        updateFuckingCrutch: (bool) => dispatch(updateFuckingCrutch(bool)),\n    };\n};\n\nexport default React.memo(connect(mapStateToProps, mapDispatchToProps)(CartPage));"],"sourceRoot":""}